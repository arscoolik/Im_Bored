import requests
from datetime import datetime
from random import randint
import telebot
from auth_data import token
from telebot import types
from dataclasses import dataclass
from pyqiwip2p import QiwiP2P
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import markups as nav
from db import Database
from aiogram import executor
import sqlite3
import datetime

db = Database("database.db") #database with tables for goods and users
p2p = QiwiP2P(auth_key="<Qiwi Auth Key>")


def telegram_bot(token):
    bot = telebot.TeleBot(token)


    @bot.message_handler(commands=["start"])
    def start_message(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        item1 = types.KeyboardButton("–ù–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞üì§")
        item2 = types.KeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—èüìö")
        item3 = types.KeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∫–∞üõü")
        item4 = types.KeyboardButton("–ö—É–ø–∏—Ç—åüí∞")
        markup.add(item1, item2, item3, item4)
        bot.send_message(message.chat.id, "–•–æ–ª–∞, —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–æ–¥–∞—Ä–æ—á–Ω–æ–≥–æ –∫–æ–¥–∞ –Ω–∞ –ù–µ—Ç—Ñ–ª–∏–∫—Å!üòâ", reply_markup = markup)
        


    @bot.message_handler(content_types = ["text"])
    def handle_command(message):
        if message.chat.type == "private":
            if message.text == "–ö—É–ø–∏—Ç—åüí∞":
                markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                item1 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                item2 = types.KeyboardButton("3 –º–µ—Å—è—Ü–∞")
                item3 = types.KeyboardButton("4 –º–µ—Å—è—Ü–∞")
                markup.add(item1)
                markup.add(item2)
                markup.add(item3)
                bot.send_message(message.chat.id, "–ù–∞ —Å–∫–æ–ª—å–∫–æ –º–µ—Å—è—Ü–µ–≤ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É?", reply_markup = markup)



            elif message.text == "–ü–æ–¥–¥–µ—Ä–∂–∫–∞üõü":
                markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                item1 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                markup.add(item1)
                bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏ @danyadjan", reply_markup = markup)

            elif message.text == "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—èüìö":
                markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                item1 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                markup.add(item1)
                bot.send_message(message.chat.id, "–ü–æ—á–∏—Ç–∞–π—Ç–µ: https://github.com/arscoolik/Im_Bored/blob/main/PythonBot/readme.md", reply_markup = markup)

            elif message.text == "–ù–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞üì§":
                markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                item1 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                markup.add(item1)
                bot.send_message(message.chat.id, f"–í –Ω–∞–ª–∏—á–∏–∏: \n {db.get_75_length() - db.get_check_length75()} –ø—Ä–æ–º–æ–∫–æ–¥(a; –æ–≤) –Ω–∞ ~3 –º–µ—Å—è—Ü–∞ (1000 —Ä—É–±–ª–µ–π) \n {db.get_100_length() - db.get_check_length100()} –ø—Ä–æ–º–æ–∫–æ–¥(a; –æ–≤) –Ω–∞ ~4 –º–µ—Å—è—Ü–∞ (1200 —Ä—É–±–ª–µ–π)", reply_markup = markup)

            elif message.text ==  "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                item1 = types.KeyboardButton("–ù–∞–ª–∏—á–∏–µ —Ç–æ–≤–∞—Ä–∞üì§")
                item2 = types.KeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—èüìö")
                item3 = types.KeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∫–∞üõü")
                item4 = types.KeyboardButton("–ö—É–ø–∏—Ç—åüí∞")
                markup.add(item1, item2, item3, item4)
                bot.send_message(message.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup = markup)

            elif message.text == "3 –º–µ—Å—è—Ü–∞":
                if db.get_check(message.from_user.id):
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item2 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                    item3 = types.KeyboardButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∫—É–ø–∫—É")
                    markup.add(item2, item3)
                    bot.send_message(message.chat.id, "–í—ã –µ—â—ë –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–æ–≤–∞—Ä. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–æ–∫—É–ø–∫—É/–ü–æ–¥–æ–∂–¥–∏—Ç–µ 15 –º–∏–Ω—É—Ç/–û–ø–ª–∞—Ç–∏—Ç–µ —Ç–æ–≤–∞—Ä",reply_markup=markup)
                elif db.get_75_length() - db.get_check_length75():
                    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                    comment = str(message.from_user.id) + "_" + str(randint(1000, 9999))
                    bill = p2p.bill(amount = 1000, lifetime = 10, comment = comment)
                    db.add_check(message.from_user.id, bill.bill_id, 75, datetime.datetime.now())
                    item1 = types.KeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É")
                    item2 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                    markup.add(item1, item2)
                    bot.send_message(message.chat.id, f"–°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã(–∞–∫—Ç–∏–≤–Ω–∞ 10 –º–∏–Ω—É—Ç): {bill.pay_url}", reply_markup = markup)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                    bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Çüòî", reply_markup = markup)
                    item2 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                    markup.add(item2)

            elif message.text == "4 –º–µ—Å—è—Ü–∞":
                if db.get_check(message.from_user.id) :
                    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                    item2 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                    item3 = types.KeyboardButton("–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∫—É–ø–∫—É")
                    markup.add(item2, item3)
                    bot.send_message(message.chat.id, "–í—ã –µ—â—ë –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–æ–≤–∞—Ä. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–æ–∫—É–ø–∫—É/–ü–æ–¥–æ–∂–¥–∏—Ç–µ 15 –º–∏–Ω—É—Ç/–û–ø–ª–∞—Ç–∏—Ç–µ —Ç–æ–≤–∞—Ä", reply_markup=markup)

                elif db.get_100_length()-db.get_check_length100():
                    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                    comment = str(message.from_user.id) + "_" + str(randint(1000, 9999))
                    bill = p2p.bill(amount = 1200, lifetime = 10, comment = comment)
                    db.add_check(message.from_user.id, bill.bill_id, 100, datetime.datetime.now())
                    item1 = types.KeyboardButton("–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É")
                    item2 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                    markup.add(item1, item2)
                    bot.send_message(message.chat.id, f"–°—Å—ã–ª–∫–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã(–∞–∫—Ç–∏–≤–Ω–∞ 10 –º–∏–Ω—É—Ç): {bill.pay_url}", reply_markup = markup)
                else:
                    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                    bot.send_message(message.chat.id, "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–π—á–∞—Å –¥–∞–Ω–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞ –Ω–µ—Çüòî", reply_markup = markup)
                    item2 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                    markup.add(item2)

            elif message.text == "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–ø–ª–∞—Ç—É":
                markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
                info = db.get_check(message.from_user.id)
                if info != False:
                    if str(p2p.check(bill_id=info[0]).status) == "PAID":
                        db.delete(message.from_user.id)
                        if info[1] == 75:
                            bot.send_message(message.chat.id, f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –≤–æ—Ç –≤–∞—à –∫–æ–¥:", reply_markup = markup)
                            bot.send_message(message.chat.id, f"{db.get_code_75()}", reply_markup = markup)
                        elif info[1] == 100:
                            bot.send_message(message.chat.id, f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –≤–æ—Ç –≤–∞—à –∫–æ–¥:", reply_markup = markup)
                            bot.send_message(message.chat.id, f"{db.get_code_100()}", reply_markup = markup)
                    else:
                        bot.send_message(message.chat.id, f"–û–ø–ª–∞—Ç–∞ –µ—â—ë –Ω–µ –ø—Ä–æ—à–ª–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ", reply_markup = markup)
                else:
                    print("error")

            elif message.text == "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∫—É–ø–∫—É":
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item1 = types.KeyboardButton("–î–∞")
                item2 = types.KeyboardButton("–ù–µ—Ç")
                markup.add(item1, item2)
                bot.send_message(message.chat.id, f"–í—ã —É–≤–µ—Ä–µ–Ω—ã?", reply_markup=markup)

            elif message.text == "–î–∞":
                db.delete(message.from_user.id)
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item2 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                markup.add(item2)
                bot.send_message(message.chat.id, f"–í—ã –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ –ø–æ–∫—É–ø–∫—É. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–ø–ª–∞—Ç–∏—Ç—å –¥—Ä—É–≥–æ–π —Ç–æ–≤–∞—Ä", reply_markup=markup)

            elif message.text == "–ù–µ—Ç":
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                item2 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
                markup.add(item2)
                bot.send_message(message.chat.id, f"–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=markup)
        last_mes = message.text
        check = db.get_check(message.from_user.id)
        if check:
            while True:
                if datetime.datetime.now() - datetime.timedelta(minutes=15, seconds = 0)>datetime.datetime.strptime((check[2].split('.'))[0], '%Y-%m-%d %H:%M:%S'):
                    db.delete(message.from_user.id)
                    if str(p2p.check(bill_id=check[0]).status) == "PAID":
                        if info[1] == 75:
                            bot.send_message(message.chat.id, f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –≤–æ—Ç –≤–∞—à –∫–æ–¥:", reply_markup=markup)
                            bot.send_message(message.chat.id, f"{db.get_code_75()}", reply_markup=markup)
                        elif info[1] == 100:
                            bot.send_message(message.chat.id, f"–û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ, –≤–æ—Ç –≤–∞—à –∫–æ–¥:", reply_markup=markup)
                            bot.send_message(message.chat.id, f"{db.get_code_100()}", reply_markup=markup)
                    else:
                        bot.send_message(message.chat.id, f"–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞", reply_markup=markup)
                        break
                if message.text != last_mes:
                    break

    bot.polling()





if __name__ == '__main__':
    # get_data()
    telegram_bot(token)